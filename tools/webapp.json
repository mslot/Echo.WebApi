{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "hostingPlanName": {
      "type": "string"
    },
    "skuName": {
      "type": "string",
      "defaultValue": "B1"
    },
    "skuCapacity": {
      "type": "string",
      "defaultValue": "1"
    },
    "webSiteName": {
      "type": "string"
    },
    "acrName": {
      "type": "string"
    },
    "containerName": {
      "type": "string"
    },
    "containerTag": {
      "type": "string"
    },
    "kvName": {
      "type": "string"
    },
    "secretsPermissions": {
      "type": "array",
      "defaultValue": [
        "list",
        "get"
      ]
    },
    "secret": {
      "type": "string"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "name": "[concat(parameters('kvName'), '/add')]",
      "dependsOn": [
        "[parameters('webSiteName')]"
      ],
      "apiVersion": "2018-02-14",
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(parameters('webSiteName'), '2017-08-01','FULL').identity.principalId]",
            "permissions": {
              "secrets": "[parameters('secretsPermissions')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "name": "[concat(parameters('kvName'), '/add')]",
      "dependsOn": [
        "[concat(parameters('webSiteName'), '/staging')]"
      ],
      "apiVersion": "2018-02-14",
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites/slots',concat(parameters('webSiteName'), '/staging')), '2017-08-01','FULL').identity.principalId]",
            "permissions": {
              "secrets": "[parameters('secretsPermissions')]"
            }
          }
        ]
      }
    },
     {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites/slots",
      "name": "[concat(parameters('webSiteName'), '/staging')]",
      "kind": "app,linux,container",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', parameters('hostingPlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "DOCKER",
          "appSettings": [
            {
              "name": "SECRET",
              "value": "[concat('@Microsoft.KeyVault(SecretUri=https://',parameters('kvName'),'.vault.azure.net/secrets/sqlserverPassword/)')]"
            },
            {
              "name": "DOCKER_CUSTOM_IMAGE_NAME",
              "value": "[concat(parameters('acrName'),'.azurecr.io/',parameters('containerName'),':',parameters('containerTag'))]"
            },
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "true"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries',parameters('acrName')),'2019-05-01').loginServer]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_USERNAME",
              "value": "[parameters('acrName')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries',parameters('acrName')),'2017-03-01').passwords[0].value]"
            }
          ],
          "dependsOn": [
            "[resourceId('Microsoft.Web/serverFarms', parameters('hostingPlanName'))]"
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', parameters('webSiteName'))]"
      ]
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "kind": "app,linux,container",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[parameters('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', parameters('hostingPlanName'))]",
        "siteConfig": {}
      }
    }
  ],
  "outputs": {}
}
